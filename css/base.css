@-moz-viewport { width: device-width; scale: 1; }
@-ms-viewport { width: device-width; scale: 1; }
@-o-viewport { width: device-width; scale: 1; }
@-webkit-viewport { width: device-width; scale: 1; }
@viewport { width: device-width; scale: 1; }

html {
box-sizing: border-box;
font: normal 100%/1.3 "Montserrat", -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Helvetica Neue", Arial,  "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", sans-serif;
-moz-text-size-adjust: 100%;
-ms-text-size-adjust: 100%;
-webkit-text-size-adjust: 100%;
text-size-adjust: 100%;
}

*, *::before, *::after {
  box-sizing: inherit;
}

:root {
  --color-primary: #00673e;
  --color-primary-pale: #befee4;
  --color-primary-light: #017949;
  --color-primary-dark: #00331f;
  --color-accent-1: #67003e;
  --color-accent-1-light: #febee4;
  --color-accent-2: #673e00;
  --color-accent-2-light: #fee4be;
  --color-accent-3: #3e6700;
  --color-accent-3-light: #e4febe;
  --color-accent-4: #003e67;
  --color-accent-4-light: #bee4fe;
  --color-accent-5: #3e0067;
  --color-accent-5-light: #e4befe;
  --color-accent-6: #3e6767;
  --color-accent-6-light: #e4fefe;
  --color-accent-7: #3e3e67;
  --color-accent-7-light: #e4e4fe;
  --color-accent-8: #676700;
  --color-accent-8-light: #fefebe;
  --color-error: #670c03;
}

body {
  margin: 0;
  min-height: 100vh;
  display: grid;
  grid-template-rows: auto 1fr auto;
}

svg {
  fill: currentColor;
}

/* - - - - - - - - - - Typogrophy - - - - - - - - - - */

/* 
Standardizing some basic type styles across my website.
*/


h1, h2, h3, h4, h5, h6, p, ul, ol {
  margin: 0 0 1.3rem;
}

h1 {
  font-size: 3rem;
  color: var(--color-primary);
}

h2,
h1 + .subtitle {
  border-bottom: 0.0625rem solid #ccc;
}

h1 + .subtitle {
  font-size: 1.25rem;
  margin: -1rem 0 2rem;
  font-style: italic;
}

a {
  color: var(--color-primary);
  transition:
    color .2s,
    background-color .2s,
    border-color .2s,
    box-shadow .2s;
}

a:hover, a:focus {
  color: var(--color-primary-dark);
}

.btn {
  background-color: var(--color-primary);
  border: 0.0625rem solid var(--color-primary-light);
  box-shadow: 0 0.25rem 0.5rem #0004;
  color: #fff;
  padding: .75em 1.25em;
  text-decoration: none;
  text-transform: uppercase;
  font-weight: bold;
  border-radius: 0.25rem;
  display: inline-block;
  cursor: pointer;
  transition:
    color .2s,
    background-color .2s,
    border-color .2s;
}


.btn:hover, .btn:focus {
  background-color: var(--color-primary-dark);
  border-color: var(--color-primary);
  color: #fff;
}


/* - - - - - - - - - - Layout - - - - - - - - - - */
/* 
I like to create a collection of reusable classes that help me create consistent layout and spacing on my webpages.
*/

.container {
  max-width: 70em;
  width: 100%;
  margin: 0 auto;
}

section > .container {
  padding-top: 4rem;
  padding-bottom: 4rem;
}

.container-side-padding {
  padding-left: 1rem;
  padding-right: 1rem;
}

.padding-t {
  padding-top: 6rem;
}

.padding-t-3 {
  padding-top: 3rem;
}

.spacing-b {
  padding-bottom: 6rem;
}

.push {
  margin-bottom: 1rem;
}

.push-4 {
  margin-bottom: 4rem;
}

.text-wrap {
  max-width: 45em;
}

.parent-styles {
  border: 0.25rem dashed #ccc;
}

.grid-3 {
  display: grid;
  gap: 1rem;
}

@media only screen and (min-width: 38em) {

  .grid-3 {
    grid-template-columns: repeat(3, 1fr);
  }

}

/* - - - - - - - - - - Masthead - - - - - - - - - - */

/* - - - - - - - - - - Nav Toggle - - - - - - - - - - */

.nav-toggle {
  width: 2.5rem;
  height: 1.5rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  position: relative;
}

.nav-toggle .tog {
  width: 100%;
  height: 0.25rem;
  background-color: #fff;
  position: relative;
  transition:
    top .2s,
    bottom .2s,
    opacity .2s,
    transform .2s;
}
.tog.top {
  top: 0;
}

.tog.bottom {
  bottom: 0;
}

.open .top {
  top: 50%;
  transform: translateY(-50%) rotate(45deg);
}

.open .middle {
  opacity: 0;
}

.open .bottom {
  bottom: 50%;
  transform: translateY(50%) rotate(-45deg);
}


@media only screen and (min-width: 65em) {

  .nav-toggle {
    display: none;
  }

}

.click-to-close {
  width: 100vw;
  height: 100vh;
  background-color: #0008;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  opacity: 0;
  transition:
    opacity .2s;
}

.click-to-close.open {
  opacity: 1;
  pointer-events: all;
}

/* - - - - - - - - - - End of Nav Toggle - - - - - - - - - - */

.masthead {
  padding: 1rem 0;
  background-color: var(--color-primary);
  position: sticky;
  top: 0;
  width: 100%;
  z-index: 10000;
}

.masthead .container {
  padding: 0 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.masthead a {
  color: #fff;
  text-decoration: none;
  transition:
    opacity .2s;
}

.masthead nav a {
  position: relative;
}

.masthead nav a::after {
  content: " ";
  display: none;
  position: absolute;
  width: 0;
  height: 0.125rem;
  bottom: -.25rem;
  left: 50%;
  transform: translateX(-50%);
  background-color: #fff;
}

.masthead nav a[aria-current="page"]::after,
.masthead nav a:hover::after {
  width: 100%;
}

.masthead a.logo:hover,
.masthead a.logo:focus {
  opacity: .5;
}

.masthead .logo h1,
.masthead .logo strong {
  color: #fff;
  font-size: 1.5rem;
  margin: 0;
}

.masthead nav {
  position: fixed;
  top: 0;
  right: -66.6666%;
  width: 66.6666vw;
  height: 100vh;
  box-shadow: -0.125rem 0.25rem 0.5rem rgba(0, 0, 0, .15);
  background-color: var(--color-primary-dark);
  transition:
    right .2s,
    top .2s;
}

.masthead nav.open {
  right: 0;
}

.masthead nav ul {
  padding: 6rem 1rem;
  text-align: right;
  margin: 0;
  list-style-type: none;
}

.masthead nav li:not(:last-child) {
  margin-bottom: 1rem;
}

.masthead nav a {
  display: block;
  font-size: 1.25rem;
}

@media only screen and (min-width: 65em) {

  .masthead nav {
    position: static;
    top: auto;
    left: auto;
    width: auto;
    height: auto;
    box-shadow: none;
    z-index: auto;
    background-color: transparent;
  }

  .masthead nav ul {
    display: flex;
    padding: 0;
  }

  .masthead nav li:not(:last-child) {
    margin-bottom: 0;
    margin-right: 2rem;
  }
  
  .masthead nav a {
    display: block;
    font-size: 1rem;
  }

  .masthead nav a::after {
    display: block;
  }

}

/* - - - - - - - - - - Cards - - - - - - - - - - */

.cards {
  list-style-type: none;
  padding: 0;
  display: grid;
  grid-template-columns: 1fr;
  column-gap: 1rem;
  row-gap: 1rem;
}

.cards-examples li {
  display: flex;
}

.cards-examples .card {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  flex-grow: 2;
  padding: 1rem;
  color: var(--color-primary);
  border: 0.125rem solid var(--color-primary);
  background-color: #fff;
  box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, .15);
  border-radius: .5rem;
  text-decoration: none;
}

.cards-examples .card:hover,
.cards-examples .card:focus {
  color: #fff;
  border-color: #fff;
  background-color: var(--color-primary);
  box-shadow: 0 0.5rem 0.75rem rgba(0, 0, 0, .15);
  }

.cards-examples .card span {
  text-decoration: underline;
}

@media only screen and (min-width: 38em) {

  .cards-examples {
    grid-template-columns: repeat(2, 1fr);
  }

}

@media only screen and (min-width: 60em) {

  .cards-examples {
    grid-template-columns: repeat(4, 1fr);
  }

}

/* - - - - - - - - - - Footer - - - - - - - - - - */

.footer {
  background-color: #222;
  color: #fff;
  padding: 2rem 0;
}

.footer .container {
  padding: 0 1rem;
}

.footer a {
  color: #fff;
}

.footer a:hover,
.footer a:focus {
  color: #ffffffaa;
}

/* - - - - - - - - - - Helpers - - - - - - - - - - */

.box-simple {
  border: 0.25rem solid var(--color-primary);
  background-color: var(--color-primary-pale);
  border-radius: .5rem;
  padding: 1rem;
  text-align: center;
  /* display: inline-block; */
  /* width: max-content; */
  margin: 0 0 1rem;
}

.box-simple:nth-of-type(2) {
  border-color: var(--color-accent-1);
  background-color: var(--color-accent-1-light);
}

.box-simple:nth-of-type(3) {
  border-color: var(--color-accent-2);
  background-color: var(--color-accent-2-light);
}

.box-simple:nth-of-type(4) {
  border-color: var(--color-accent-3);
  background-color: var(--color-accent-3-light);
}

.box-simple:nth-of-type(5) {
  border-color: var(--color-accent-4);
  background-color: var(--color-accent-4-light);
}

.box-simple:nth-of-type(6) {
  border-color: var(--color-accent-5);
  background-color: var(--color-accent-5-light);
}

.box-simple:nth-of-type(7) {
  border-color: var(--color-accent-6);
  background-color: var(--color-accent-6-light);
}

.box-simple:nth-of-type(8) {
  border-color: var(--color-accent-7);
  background-color: var(--color-accent-7-light);
}

.box-simple:nth-of-type(9) {
  border-color: var(--color-accent-8);
  background-color: var(--color-accent-8-light);
}

.box-simple:last-of-type {
  margin: 0;
}

.flex-transition .box-simple,
.grid-transition .box-simple {
  margin: 0;
}

.flex-transition .box-simple:not(:last-child) {
  margin: 0 1rem 0 0;
}

/* A nice highlight for when I dropped in code samples */

code {
  background-color: #00000022;
  border: 0.0625rem solid #00000044;
  padding: .25rem;
  border-radius: .25rem;
}

/* - - - - - - - - - - Accessibility - - - - - - - - - - */

.skip-links {
  padding: 0;
  margin: 0;
  list-style-type: none;
}

.skip-links a {
  position: absolute;
  top: -100rem;
  display: inline-block;
  padding: 1rem;
  background-color: var(--color-accent-1);
  color: #fff;
  font-weight: bold;
  text-decoration: none;
  z-index: 1000000;
}

.skip-links a:focus {
  top: 0;
}

.to-top {
  position: fixed;
  bottom: 0;
  right: 1rem;
  background-color: var(--color-accent-1);
  padding: .5rem .75rem;
  border-radius: .5rem .5rem 0 0;
  text-decoration: none;
  transform: translateY(100%);
  transition: transform .2s;
}

.to-top.visible {
  transform: none;
}

*:focus {
  outline: 0.125rem solid var(--color-accent-1);
  outline-offset: 0.125rem;
}


/* - - - - - - - - - - Icons - - - - - - - - - - */

.icon {
  width: 2rem;
  height: 2rem;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
}

.icon svg {
  width: 100%;
  height: 100%;
  display: inline-block;
}

.icon-label {
  vertical-align: middle;
}